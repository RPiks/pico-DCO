.program dco

.wrap_target

    out x, 8        // load 8-bit delay value in terms of cycles.   1
LOOPH:
    jmp x-- LOOPH   // do accurate delay.                           2+x
    set pins, 1     // set pins = 1.                                3+x.

    out x, 8        // load 8-bit delay value in terms of cycles.   4+y
LOOPL:
    jmp x-- LOOPL   //                                              5+y
    set pins, 0     //                                              6+y
                    // CLK/6 max, ~250MHz/6 = 41.666(6)MHz output max frq
.wrap

% c-sdk {
static inline void dco_program_init(PIO pio, uint sm, uint offset, uint pin)
{
    pio_sm_config c = dco_program_get_default_config(offset);
    sm_config_set_out_pins(&c, pin, 1);
    pio_gpio_init(pio, pin);

    sm_config_set_out_shift(&c, false, true, 32);
    sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_TX);

    pio_sm_set_consecutive_pindirs(pio, sm, pin, 1, true);
    
    sm_config_set_clkdiv(&c, 1.f);

    pio_sm_init(pio, sm, offset, &c);
    pio_sm_set_enabled(pio, sm, true);
}
//
static inline void dco_program_puts(PIO pio, uint sm, const uint32_t *s)
{
    pio_sm_put(pio, sm, s[0]);
    pio_sm_put(pio, sm, s[1]);
    pio_sm_put(pio, sm, s[2]);
    pio_sm_put(pio, sm, s[3]);
    pio_sm_put(pio, sm, s[4]);
    pio_sm_put(pio, sm, s[5]);
    pio_sm_put(pio, sm, s[6]);
    pio_sm_put(pio, sm, s[7]);
}

%}
